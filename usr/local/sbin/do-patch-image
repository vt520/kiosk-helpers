#!/bin/bash
source /usr/local/lib/kiosk/administration

function find_nbd_usage() {
	echo -n "/ "
        blkid -c /dev/null \
                | egrep "nbd[0-9]+p[0-9]+" \
                | sed -r "s/^([^p]+)p.*$/\1/" \
                | sort | uniq
}

function find_nbd_open() {
        for NBD in $(find /dev -iname "nbd*" | grep -v "p" ); do
                grep -x "${NBD}" <(find_nbd_usage) &> /dev/null || echo $NBD
        done
}

function partitions_by_size() {
        sudo  fdisk -l "$1" -o sectors,device \
                | egrep "^[ ]*[0-9]" \
                | sort -nr \
                | sed -r "s/[^/]+([/].+)$/\1/"
}
function find_hive() {
        WINDOWS=$(find "$1" -maxdepth 1 -iname "windows")
        [ "$WINDOWS" == "" ] || {
                SYSTEM32=$(find "$WINDOWS" -maxdepth 1 -iname "system32")
                [ "$SYSTEM32" == "" ] || {
                        CONFIG=$(find "$SYSTEM32" -maxdepth 1 -iname "config")
                        [ "$CONFIG" == "" ] || {
                                find "$CONFIG" -maxdepth 1 -iname "software"
                        }
                }
        }
}

function generate_nonce() {
        # Read 24 Bytes from the Cryptographic Generator
        # and remove whitespace
        od -vAn  -w24  -N24 -tx1 < /dev/urandom \
                | sed -r "s/ //g"
}

echo "Setting up watchdog"
defer-action -t 20 -n panic do-not-use -yes-reboot-hard

echo "Checking Kernel Modules"
lsmod | grep -w nbd &> /dev/null || {
        echo "Installing nbd module"
        modprobe nbd max_part=4 nbds_max=1 || {
		echo "Could not load module, exiting"
		exit 1
	}
}

echo "Finding block devices: "
BLOCK=$(find_nbd_open | head -n 1)
MOUNT=$(mktemp -d)

echo "Reading nonce"
NONCE=$(<${KIOSK_PROFILE}/.nonce)

echo Found open block device $BLOCK
echo Mountpoint $MOUNT

qemu-nbd -c $BLOCK -f qcow2 ${KIOSK_PROFILE}/domain.qcow2
FOUND=0
for PART in $(partitions_by_size $BLOCK); do
        echo "Checking $PART for Registry";
        mount $PART $MOUNT
                CHECK=$(find_hive $MOUNT)
                [ "$CHECK" == "" ] || {
                        TEMPLATE=$(tempfile -s ".reg")
                        sed -r "s/\{nonce\}/$NONCE/g" /usr/local/lib/kiosk/templates/00-start.template >> "$TEMPLATE"
                        reged -CI $CHECK \
                                "HKEY_LOCAL_MACHINE\\SOFTWARE" \
                                "$TEMPLATE"
			FOUND=1
                }
		sleep 1
        umount -l $MOUNT
        umount -f $MOUNT 2> /dev/null
done
sync /dev/nbd0* &
sleep 0.1

echo Removing temporary files
rm $TEMPLATE

echo Removing block link
qemu-nbd -d $BLOCK

echo Removing mountpoint
rm -r $MOUNT

echo "Removing Watchdog"
defer-action -c panic
exit 0
